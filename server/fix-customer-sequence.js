/**
 * ุณูุฑูุจุช ูุฅุตูุงุญ ูุดููุฉ autoincrement ูู ุฌุฏูู Customer
 * ูููู ุจุฅุนุงุฏุฉ ุชุนููู sequence ุงูุฎุงุต ุจุงูู ID
 */

const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function fixCustomerSequence() {
  try {
    console.log('๐ง ุจุฏุก ุฅุตูุงุญ sequence ุฌุฏูู Customer...');

    // ุงูุญุตูู ุนูู ุฃุนูู ID ููุฌูุฏ
    const lastCustomer = await prisma.customer.findFirst({
      orderBy: { id: 'desc' }
    });

    const maxId = lastCustomer?.id || 0;
    console.log(`๐ ุฃุนูู ID ููุฌูุฏ: ${maxId}`);

    // ุฅุนุงุฏุฉ ุชุนููู sequence ูู SQLite
    // ูู SQLiteุ ูุญุชุงุฌ ูุชุญุฏูุซ ุฌุฏูู sqlite_sequence
    await prisma.$executeRawUnsafe(`
      DELETE FROM sqlite_sequence WHERE name = 'Customer';
    `);

    await prisma.$executeRawUnsafe(`
      INSERT INTO sqlite_sequence (name, seq) VALUES ('Customer', ${maxId});
    `);

    console.log(`โ ุชู ุฅุนุงุฏุฉ ุชุนููู sequence ุฅูู ${maxId}`);
    console.log('โ ุชู ุฅุตูุงุญ ุงููุดููุฉ ุจูุฌุงุญ!');

    // ุงุฎุชุจุงุฑ ุฅูุดุงุก ุนููู ุฌุฏูุฏ
    console.log('\n๐งช ุงุฎุชุจุงุฑ ุฅูุดุงุก ุนููู ุฌุฏูุฏ...');
    const testCustomer = await prisma.customer.create({
      data: {
        name: 'ุนููู ุชุฌุฑูุจู',
        phone: '0912345678',
        note: 'ุชู ุฅูุดุงุคู ููุงุฎุชุจุงุฑ'
      }
    });

    console.log(`โ ุชู ุฅูุดุงุก ุนููู ุชุฌุฑูุจู ุจูุฌุงุญ! ID: ${testCustomer.id}`);

    // ุญุฐู ุงูุนููู ุงูุชุฌุฑูุจู
    await prisma.customer.delete({
      where: { id: testCustomer.id }
    });
    console.log('๐๏ธ  ุชู ุญุฐู ุงูุนููู ุงูุชุฌุฑูุจู');

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุตูุงุญ sequence:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูุณูุฑูุจุช
fixCustomerSequence()
  .then(() => {
    console.log('\nโจ ุงูุชูู ุงูุณูุฑูุจุช ุจูุฌุงุญ!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\nโ ูุดู ุงูุณูุฑูุจุช:', error);
    process.exit(1);
  });
