/**
 * Script ูุฅุตูุงุญ ุงูู sequence ุงูุฎุงุต ุจุฌุฏูู Customer
 * ูุฌุจ ุชุดุบููู ูุฑุฉ ูุงุญุฏุฉ ูุฅุตูุงุญ ุงููุดููุฉ
 */

import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function fixCustomerSequence() {
  try {
    console.log('๐ง ุจุฏุก ุฅุตูุงุญ sequence ุฌุฏูู Customer...');

    // ุงูุญุตูู ุนูู ุฃุนูู ID ููุฌูุฏ
    const lastCustomer = await prisma.customer.findFirst({
      orderBy: { id: 'desc' }
    });

    const maxId = lastCustomer?.id || 0;
    console.log(`๐ ุฃุนูู ID ููุฌูุฏ: ${maxId}`);

    // ุฅุตูุงุญ ุงูู sequence
    await prisma.$executeRawUnsafe(
      `SELECT setval(pg_get_serial_sequence('"Customer"', 'id'), ${maxId}, true);`
    );

    console.log('โ ุชู ุฅุตูุงุญ ุงูู sequence ุจูุฌุงุญ!');
    console.log(`๐ฏ ุงูู sequence ุงูุขู ุนูุฏ: ${maxId}`);
    console.log('๐ ุงูุนููู ุงูุชุงูู ุณูุญุตู ุนูู ID: ' + (maxId + 1));

  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุตูุงุญ ุงูู sequence:', error);
    throw error;
  } finally {
    await prisma.$disconnect();
  }
}

// ุชุดุบูู ุงูู script
fixCustomerSequence()
  .then(() => {
    console.log('\nโจ ุชู ุงูุงูุชูุงุก ุจูุฌุงุญ!');
    process.exit(0);
  })
  .catch((error) => {
    console.error('\n๐ฅ ูุดู ุงูุชูููุฐ:', error);
    process.exit(1);
  });
